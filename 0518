from selenium import webdriver
from selenium.webdriver.chrome.options import Options as options
from bs4 import BeautifulSoup
from time import sleep
import datetime
import pandas as pd
from bs4 import BeautifulSoup
import requests
from MLB_with_URL import game_url
import re
import time


start = time.time()

options = options()
prefs = {
    'profile.default_content_setting_values':
        {
            'notifications': 2
        }
}
options.add_experimental_option('prefs', prefs)
options.add_argument("--headless")
options.add_argument("--disable-javascript")



urlALL = str(game_url()) #向請求判斷MLB__with_URL是否有比賽 及 取當天賽事URL
m = urlALL.split('\'')[1::2] #將回傳的字串轉為list
print(m)

for url in m:
    print(url)


    headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36'}
    url = url
    driver = webdriver.Chrome("./chromedriver.exe",options=options)
    #driver.implicitly_wait(10)
    html = driver.get(url)
    # sleep(5)
    html_data = driver.page_source
    #soup = BeautifulSoup(html,'html.parser')
    tables = pd.read_html(html_data)
    sorce = driver.page_source
    print(tables[-5],'\n',tables[-4])
    driver.close()





    req = requests(url, headers=headers)
    soup = BeautifulSoup(req.text , 'html.parser')
    tm = soup.select('table[class="linescore nohover stats_table no_freeze" tbody] tr')[0]
    print(tm)

    # if tm == 'Boston Red Sox': #波士頓紅襪
    #     teamname = 'SOX'
    # elif tm == 'Toronto Blue Jays': #多倫多藍鳥
    #     teamname = 'TOR'
    # elif tm == 'Baltimore Orioles': #巴爾的摩金鶯
    #     teamname = 'BAL'
    # elif tm == 'Tampa Bay Rays': #坦帕灣光芒2008~
    #     teamname = 'TB'
    # elif tm == 'New York Yankees': #紐約洋基
    #     teamname = 'NYY'
    #
    # elif tm == 'Chicago White Sox': #芝加哥白襪
    #     teamname = 'CWS'
    # elif tm == 'Cleveland Indians': #克里夫蘭印地安人
    #     teamname = 'CLE'
    # elif tm == 'Detroit Tigers': #底特律老虎
    #     teamname = 'DET'
    # elif tm == 'Kansas City Royals': #堪薩斯皇家
    #     teamname = 'KC'
    # elif tm == 'Minnesota Twins': #明尼蘇達雙城
    #     teamname = 'MIN'
    #
    # elif tm == 'Oakland Athletics': #奧克蘭運動家
    #     teamname = 'OAK'
    # elif tm == 'Los Angeles Angels of Anaheim': #洛杉磯天使
    #     teamname = 'LAA'
    # elif tm == 'Texas Rangers': #德州遊騎兵
    #     teamname = 'TEX'
    # elif tm == 'Houston Astros': #休士頓太空人
    #     teamname = 'HOU'
    # elif tm == 'Seattle Mariners': #西雅圖水手
    #     teamname = 'SEA'
    #
    # elif tm == 'Atlanta Braves': #亞特蘭大勇士
    #     teamname = 'ATL'
    # elif tm == 'Philadelphia Phillies': #費城費城人
    #     teamname = 'PHI'
    # elif tm == 'Florida Marlins': # 佛羅里達馬林魚~2012
    #     teamname = 'MIA'
    # elif tm == 'Miami Marlins': #邁阿密馬林魚2012~
    #     teamname = 'MIA'
    # elif tm == 'New York Mets': #紐約大都會
    #     teamname = 'NYM'
    # elif tm == 'Washington Nationals': #華盛頓國民
    #     teamname = 'WSH'
    #
    # elif tm == 'Milwaukee Brewers': #密爾瓦基釀酒人
    #     teamname = 'MIL'
    # elif tm == 'Pittsburgh Pirates': #匹茲堡海盜
    #     teamname = 'PIT'
    # elif tm == 'Cincinnati Reds': #辛辛那提紅人
    #     teamname = 'CIN'
    # elif tm == 'Chicago Cubs': #芝加哥小熊
    #     teamname = 'CHC'
    # elif tm == 'St. Louis Cardinals': #聖路易紅雀
    #     teamname = 'STL'
    #
    #
    # elif tm == 'San Diego Padres': #聖地牙哥教士
    #     teamname = 'SD'
    # elif tm == 'Arizona Diamondbacks': #亞利桑那響尾蛇
    #     teamname = 'ARI'
    # elif tm == 'San Francisco Giants': #舊金山巨人
    #     teamname = 'SF'
    # elif tm == 'Colorado Rockies': #科羅拉多洛磯
    #     teamname = 'COL'
    # elif tm == 'Los Angeles Dodgers': #洛杉磯道奇
    #     teamname = 'LAD'
    # else:
    #     print('nameERROR')
    # print(teamname)


    # tm1 = soup.select('table[class="linescore nohover stats_table no_freeze"] tr')[1]('td')[1].text
    # print(tm1)
    # teamname_dict = {'Boston Red Sox':'SOX' ,'Toronto Blue Jays':'TOR','Baltimore Orioles':'BAL','Tampa Bay Rays':'TB',
    #                  'New York Yankees':'NYY' ,'Chicago White Sox':'CWS','Cleveland Indians':'CLE','Detroit Tigers':'DET',
    #                  'Kansas City Royals':'KC','Minnesota Twins':'MIN','Oakland Athletics':'OAK','Los Angeles Angels of Anaheim':'LAA',
    #                  'Texas Rangers':'TEX','Houston Astros':'HOU','Seattle Mariners':'SEA','Atlanta Braves':'ATL','Philadelphia Phillies':'PHI',
    #                  'Florida Marlins':'MIA','Miami Marlins':'MIA','New York Mets':'NYM','Washington Nationals':'WSH',
    #                  'Milwaukee Brewers':'MIL','Pittsburgh Pirates':'PIT','Cincinnati Reds':'CIN','Chicago Cubs':'CHC',
    #                  'St. Louis Cardinals':'STL','San Diego Padres':'SD','Arizona Diamondbacks':'ARI','San Francisco Giants':'SF','Colorado Rockies':'COL',
    #                  'Los Angeles Dodgers':'LAD'}
    # print(teamname_dict[tm1])


finish = time.time()

print(finish-start)
